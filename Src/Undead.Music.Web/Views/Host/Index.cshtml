@model Undead.Music.Web.Models.HostViewData

@{
    ViewBag.Title = "Index";
}

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="http://localhost:58931/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            $.connection.hub.url = "http://localhost:58931/signalr";
            var chat = $.connection.undeadMusicHub;
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.playFile($('#hostId').val(), $('#songId').val());
                });

                $('#next').click(function () {
                    // Call the Send method on the hub.
                    chat.server.nextSong($('#hostId').val());
                });

            });
        });

        function playFile(hostId, songId)
        {
            var chat = $.connection.undeadMusicHub;
            chat.server.playFile(hostId, songId);
        }

        function previousSong(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.previousSong(hostId);
        }

        function play(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.play(hostId);
        }

        function pause(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.pause(hostId);
        }

        function stop(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.stop(hostId);
        }

        function nextSong(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.nextSong(hostId);
        }

        function volumeUp(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.volumeUp(hostId);
        }

        function volumeDown(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.volumeDown(hostId);
        }

        function mute(hostId) {
            var chat = $.connection.undeadMusicHub;
            chat.server.mute(hostId);
        }
    </script>
}

<h2>@Model.HostName</h2>
<h3>Playlist: @Model.PlaylistName</h3>

<a href="javascript:previousSong(@Model.Id)">Previous</a> |

<a href="javascript:play(@Model.Id)">Play</a> |

<a href="javascript:pause(@Model.Id)">Pause</a> |

<a href="javascript:stop(@Model.Id)">Stop</a> |

<a href="javascript:nextSong(@Model.Id)">Next</a> |

<a href="javascript:volumeUp(@Model.Id)">Volume Up</a> |

<a href="javascript:volumeDown(@Model.Id)">Volume Down</a> |

<a href="javascript:mute(@Model.Id)">Mute</a> |

@Html.ActionLink("Shuffle", "Shuffle", new { id = Model.Id }, null)

<br />
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Playlist.First().Title)
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model.Playlist)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a href="javascript:playFile(@Model.Id,@item.Id)">Play</a>
            </td>
        </tr>
    }
</table>